#ifndef _OLED_MODULE_
#define _OLED_MODULE_

#include <Adafruit_SSD1306.h>

class Oled_module
{
private:
    Adafruit_SSD1306 display;
    int SCREEN_ADDRESS;
    int SCREEN_WIDTH;
    int SCREEN_HEIGHT;
public:

    /// @brief Constructor
    /// @param ADDRESS I2C address
    Oled_module(int SCREEN_WIDTH, int SCREEN_HEIGHT, int ADDRESS);

    /// @brief Must be called before using any other functions
    void begin();

    /// @brief Enables/disables the automatic sendClear task
    bool autoSend = true;

    bool dataChanged = false;
    
    bool widgetMap[2][8];
    void widgetMapClear();
    bool widgetMapFindSpot(int& w, int& h, bool reserve = true);
    void widgetMapPrint();
    void widgetMapReserve(int c0, int c1, int r0, int r1);

    /// @brief Returns the internal adafruit gfx object for direct access to the display
    Adafruit_SSD1306& getDisplay() { return display; }

    /// @brief Sends buffer and clears it
    /// @param autoSendTask If this function is used by a background task (not the user), set this to true.
    void sendClear(bool autoSendTask = false);

    /// @brief Shows the "Vědátoři" logo on the display
    void drawLogo();

    // =========================== Widgets
    /*
    Display is divided into 2 columns and 8 rows
    */

    /// (WIP)
    /// @brief Displays a clock (11:40)
    /// @param size The size of text (1 - 4), 1 & 2 is single column, 3 & 4 is double column
    void widgetText(String text ,int16_t size, int column = -1, int row = -1);
    

    
};

namespace oled_module {

const unsigned char vedatoriBitmap128x64 [] PROGMEM =
{
// 'vedatori_black', 128x64px
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0x8f, 0xff, 
0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xf8, 0x07, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xfe, 0x03, 0xff, 
0xff, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xf8, 0x00, 0xff, 
0xff, 0xff, 0xf8, 0x00, 0x1f, 0xff, 0xc7, 0x38, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xe0, 0x3c, 0x7f, 
0xff, 0xff, 0xf0, 0x00, 0x07, 0xff, 0x03, 0xf0, 0x3f, 0xf8, 0x00, 0x03, 0xff, 0xc0, 0x38, 0x1f, 
0xff, 0xff, 0xc0, 0x00, 0x01, 0xfe, 0x03, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0xff, 0x00, 0x70, 0x07, 
0xff, 0xff, 0x00, 0x00, 0x00, 0xf8, 0x01, 0xc0, 0x07, 0xc0, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x03, 
0xff, 0xfe, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 
0xff, 0xfe, 0x03, 0x81, 0xc0, 0x70, 0x07, 0xf8, 0x03, 0x80, 0x7f, 0xc0, 0x18, 0x00, 0x20, 0x01, 
0xff, 0xfe, 0x03, 0xc1, 0xc0, 0x70, 0x07, 0xf8, 0x03, 0x80, 0x7f, 0xe0, 0x18, 0x00, 0x70, 0x01, 
0xff, 0xfe, 0x01, 0xc3, 0xc0, 0x70, 0x07, 0xfc, 0x03, 0x80, 0x7f, 0xf0, 0x18, 0x00, 0x70, 0x01, 
0xff, 0xfe, 0x01, 0xe3, 0x80, 0x70, 0x07, 0x80, 0x03, 0x80, 0x7d, 0xf8, 0x18, 0x00, 0xf8, 0x01, 
0xff, 0xfe, 0x01, 0xe3, 0x80, 0x70, 0x07, 0x00, 0x03, 0x80, 0x78, 0x7c, 0x18, 0x00, 0xf8, 0x01, 
0xff, 0xfe, 0x00, 0xe7, 0x00, 0x70, 0x07, 0x00, 0x03, 0x80, 0x78, 0x3c, 0x18, 0x01, 0xfc, 0x01, 
0xff, 0xfe, 0x00, 0xf7, 0x00, 0x70, 0x07, 0xf0, 0x03, 0x80, 0x78, 0x3c, 0x18, 0x01, 0x9c, 0x01, 
0xff, 0xfe, 0x00, 0x7f, 0x00, 0x70, 0x07, 0xf0, 0x03, 0x80, 0x78, 0x3c, 0x18, 0x03, 0x8e, 0x01, 
0xff, 0xfe, 0x00, 0x7e, 0x00, 0x70, 0x07, 0xf0, 0x03, 0x80, 0x78, 0x3c, 0x18, 0x03, 0x8e, 0x01, 
0xff, 0xfe, 0x00, 0x3e, 0x00, 0x70, 0x07, 0x80, 0x03, 0x80, 0x78, 0x3c, 0x18, 0x07, 0xff, 0x01, 
0xff, 0xfe, 0x00, 0x3c, 0x00, 0x70, 0x07, 0x00, 0x03, 0x80, 0x78, 0x7c, 0x18, 0x07, 0xff, 0x01, 
0xff, 0xfe, 0x00, 0x3c, 0x00, 0x70, 0x07, 0x00, 0x03, 0x80, 0x78, 0xf8, 0x18, 0x0f, 0xff, 0x81, 
0xff, 0xfe, 0x00, 0x18, 0x00, 0x70, 0x07, 0xfc, 0x03, 0x80, 0x7f, 0xf8, 0x18, 0x1e, 0x03, 0x81, 
0xff, 0xfe, 0x00, 0x18, 0x00, 0x70, 0x07, 0xfc, 0x03, 0x80, 0x7f, 0xf0, 0x18, 0x1e, 0x03, 0xc1, 
0xff, 0xfe, 0x00, 0x00, 0x00, 0x70, 0x07, 0xfc, 0x03, 0x80, 0x7f, 0xe0, 0x18, 0x0c, 0x01, 0x81, 
0xff, 0xff, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x07, 0xc0, 0x3f, 0x00, 0x3c, 0x00, 0x00, 0x03, 
0xff, 0xff, 0xc0, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0xff, 0x00, 0x00, 0x07, 
0xff, 0xf9, 0xf0, 0x00, 0x07, 0xdf, 0x00, 0x00, 0x3e, 0xf8, 0x00, 0x03, 0xe7, 0xc0, 0x00, 0x1f, 
0xff, 0xe0, 0xf8, 0x00, 0x1f, 0x07, 0xc0, 0x00, 0xf8, 0x3e, 0x00, 0x07, 0xc1, 0xe0, 0x00, 0x7f, 
0xff, 0xc0, 0x3e, 0x00, 0x7c, 0x01, 0xf0, 0x03, 0xe0, 0x0f, 0x00, 0x1f, 0x00, 0xf8, 0x00, 0xff, 
0xff, 0x00, 0x0f, 0x80, 0xf8, 0x00, 0x78, 0x0f, 0x9c, 0xc7, 0xc0, 0x7c, 0x00, 0x3e, 0x03, 0xff, 
0xfc, 0x00, 0x07, 0xc3, 0xe0, 0x00, 0x3e, 0x1f, 0x0f, 0xc1, 0xf0, 0xf8, 0x00, 0x0f, 0x0f, 0xff, 
0xf8, 0x00, 0x01, 0xff, 0x80, 0x00, 0x0f, 0xfc, 0x0f, 0x80, 0x7f, 0xe0, 0x00, 0x07, 0xff, 0xff, 
0xe0, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x01, 0xff, 0xff, 
0x80, 0x00, 0x00, 0x3c, 0x00, 0x7c, 0x01, 0xe0, 0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x7f, 0xff, 
0x80, 0x7f, 0xe0, 0x1c, 0x01, 0xff, 0x00, 0xc0, 0x1f, 0xe0, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x7f, 0xe0, 0x1c, 0x07, 0xff, 0x80, 0xc0, 0x1f, 0xf0, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x7f, 0xe0, 0x1c, 0x07, 0xcf, 0xc0, 0xc0, 0x1f, 0xf8, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x0f, 0x03, 0xc0, 0xc0, 0x1c, 0x78, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x0e, 0x01, 0xc0, 0xc0, 0x1c, 0x38, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x1e, 0x01, 0xc0, 0xc0, 0x1c, 0x38, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x1e, 0x00, 0xc0, 0xc0, 0x1c, 0x70, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x1e, 0x00, 0xc0, 0xc0, 0x1f, 0xf0, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x1e, 0x01, 0xc0, 0xc0, 0x1f, 0xe0, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x0f, 0x01, 0xc0, 0xc0, 0x1c, 0xe0, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x0f, 0x03, 0xc0, 0xc0, 0x1c, 0xf0, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x07, 0xcf, 0xc0, 0xc0, 0x1c, 0x78, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x03, 0xff, 0x80, 0xc0, 0x1c, 0x78, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0f, 0x00, 0x1c, 0x01, 0xff, 0x00, 0xc0, 0x1c, 0x3c, 0x06, 0x00, 0x3c, 0x00, 0x7f, 0xff, 
0x80, 0x0e, 0x00, 0x1c, 0x00, 0x7c, 0x00, 0xc0, 0x1c, 0x1c, 0x06, 0x00, 0x38, 0x00, 0x7f, 0xff, 
0x80, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x7f, 0xff, 
0xe0, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x01, 0xff, 0xff, 
0xf0, 0x00, 0x00, 0xff, 0x80, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x03, 0xff, 0xff, 
0xfc, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x1f, 0xfe, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x0f, 0xff, 0xff, 
0xff, 0x00, 0x0f, 0xff, 0xf0, 0x00, 0x7f, 0xff, 0x80, 0x03, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xff, 
0xff, 0x80, 0x3f, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 
0xff, 0xe0, 0x7f, 0xff, 0xff, 0x03, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 
0xff, 0xf9, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

}

#endif // _OLED_MODULE_